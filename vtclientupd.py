import requests
import json
import sys
import colorama
from time import sleep
import argparse
from models import db, UploadedFile, 

colorama.init()

def type(words: str):
    for char in words:
        sleep(0.015)
        sys.stdout.write(char)
        sys.stdout.flush()
    print()

# Create the parser
parser = argparse.ArgumentParser(description="Upload and analyze a file with VirusTotal")

# Add the arguments
parser.add_argument('-f', '--file', metavar='file', type=str, help='the path to the file')
parser.add_argument('-i', '--id', metavar='id', type=str, help='the id of the file')
parser.add_argument('-u', '--user', metavar='user', type=str, help='the username of the user')

# Execute the parse_args() method
args = parser.parse_args()

url = r'https://www.virustotal.com/vtapi/v2/file/scan'

api = open("vt-api.txt", "r").read()

file_path = args.file  # Use the file path from the command-line argument
params = {"apikey": api}

file_to_upload = {"file": open(file_path, "rb")}

response = requests.post(url, files=file_to_upload, params=params)
file_url = f"https://www.virustotal.com/api/v3/files/{(response.json())['sha1']}"

headers = {"accept": "application/json", "x-apikey": api}
type(colorama.Fore.YELLOW + "Analysing....")

response = requests.get(file_url, headers=headers)

report = response.text
report = json.loads(report)

# Save the report to the SQLite database
uploaded_file = UploadedFile.query.get(args.id)
uploaded_file.report = json.dumps(report)
db.session.commit()

# Assuming 'file_id' and 'user_id' are the corresponding IDs for the uploaded file and the user
report_data = {
    'file_id': file_id,
    'user_id': user_id,
    'timestamp': datetime.now(),
    'report': json.dumps(report)
}
new_report = Report(**report_data)
db.session.add(new_report)
db.session.commit()